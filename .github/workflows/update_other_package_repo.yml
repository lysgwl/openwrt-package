name: Update Other Package Repo

#on:
#  schedule:
#    - cron: '0 0 * * 0'
    # 每5分钟运行一次 (cron: '*/5 * * * *')
    # 每天凌晨运行 (0 0 * * *) 
    # 每周执行一次 (0 0 * * 0)
    # 每15天执行 (0 0 */15 * *)

on:
  repository_dispatch:
  workflow_dispatch:
  
env:
  BUILD_SCRIPT: run-scripts.sh
  REPO_REMOTE_COND: 2
  REPO_CLONE_COND:  false
  REPO_HTTP_COND:   false
  
jobs:
  build:   # update build
    runs-on: ubuntu-latest
    
    steps:

    - name: Checkout master branch
      uses: actions/checkout@v4
      with:
        ref: master

    - name: Set SSH key and known_hosts
      uses: webfactory/ssh-agent@v0.9.0   # appleboy/ssh-action@master
      with:
        ssh-private-key: ${{ secrets.PERSONAL_SSH_KEY }}
        
    - name: Setup git config
      run: |
        git config --global user.name "lysgwl"
        git config --global user.email "lysgwl@163.com"
        git config --global init.defaultBranch main    
        
    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        scripts_file="${GITHUB_WORKSPACE}/.github/scripts/${BUILD_SCRIPT}"
        if [ ! -e "${scripts_file}" ]; then
            exit 1
        fi

        chmod +x "${scripts_file}"
        echo "scripts=${scripts_file}" >> $GITHUB_ENV

    - name: Get remote repository contents
      if: env.REPO_REMOTE_COND != 0 && !cancelled()
      run: |
        scripts_file=${{ env.scripts }}
        if [ -x "${scripts_file}" ]; then
            source ${scripts_file} 
            get_remote_repo ${REPO_REMOTE_COND}
        fi
        
    - name: Commit and push repository using SSH
      run: |
        # 相对于git顶层目录的路径
        package_path_rel="otherpackage"
        
        scripts_file=${{ env.scripts }}
        if [ -x "${scripts_file}" ]; then
            source ${scripts_file}
            check_git_commit ${package_path_rel}
        fi
        
    #- name: Push changes repository
    #  uses: ad-m/github-push-action@master
    #  with:
    #    github_token: ${{ secrets.GITHUB_TOKEN }}   # PERSONAL_ACCESS_TOKEN
    #    branch: ${{ github.ref }}    # master    
        
    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@v2  # main
      with:
        token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        retain_days: 0
        keep_minimum_runs: 0    
