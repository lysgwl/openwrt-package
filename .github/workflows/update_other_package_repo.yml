name: Update Other Package Repo

#on:
#  schedule:
#    - cron: '*/2 * * * *'     # 每天凌晨运行 (0 0 * * *)

on:
  repository_dispatch:
  workflow_dispatch:
  
jobs:
  build:   # update build
    runs-on: ubuntu-latest
    
    steps:
    
    - name: Checkout master branch
      uses: actions/checkout@v2
      with:
        ref: master
        
    - name: Set SSH key and known_hosts
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.PERSONAL_SSH_KEY }}   

    - name: Setup Git Config
      run: |
        git config --global user.name "lysgwl"
        git config --global user.email "lysgwl@163.com"      
        
    - name: Add remote repository
      run: |
        function add_fetch_repo() {
            echo "add remote repository: $2"    
            git remote add $1 https://github.com/$2.git || true
            git fetch $1
        }
        
        add_fetch_repo diskman lisaac/luci-app-diskman
        add_fetch_repo ddns-go sirpdboy/luci-app-ddns-go
        add_fetch_repo OpenAppFilter destan19/OpenAppFilter
        add_fetch_repo poweroff esirplayground/luci-app-poweroff
        add_fetch_repo socat chenmozhijin/luci-app-socat

    - name: Copy Repository Contents
      run: |
        function copy_repo_contents() {
            local branch=$1             # 分支名
            local remote_alias=$2       # 远程仓库别名
            local local_dir_name=$3     # 本地目录名
            local package_path_rel=$4   # 相对于顶层目录的路径
            
            # 转到Git顶层目录
            pushd $(git rev-parse --show-toplevel)
            
            # 计算相对于Git顶层的目标路径
            local target_path="${package_path_rel}/${local_dir_name}"
            
            # 移除路径开头的"./"
            target_path="${target_path#./}" 
            
            echo $target_path
            
            if [ -d "$target_path" ]; then
                echo "Repository ${local_dir_name} already cloned. Pulling updates..."

                pushd "$target_path"
                # 更新远程内容
                git fetch $remote_alias $branch 

                # 硬重置本地分支
                git reset --hard FETCH_HEAD
                popd
            else
                echo "Cloning repository content into the new prefix...$target_path"
                git subtree add --prefix="$target_path" $remote_alias $branch --squash
            fi
            
            echo "current dir=$PWD"
            ls -al $target_path
            
            popd
        }
        
        # 相对于git顶层目录的路径
        package_path_rel="otherpackage"  

        copy_repo_contents master diskman luci-app-diskman $package_path_rel
        copy_repo_contents main ddns-go luci-app-ddns-go $package_path_rel
        #copy_repo_contents master OpenAppFilter luci-app-OpenAppFilter $package_path_rel
        #copy_repo_contents master poweroff luci-app-poweroff $package_path_rel
        #copy_repo_contents main socat luci-app-socat $package_path_rel
        
        # 
        if ! git diff-index --quiet HEAD --; then
            status="successful"
        else
            status="no_changes"
        fi
        
        echo $status
        echo "repo_status=$status" >> $GITHUB_ENV
     
    - name: Commit and Push repository using SSH
      env: 
        repo_status: ${{ env.repo_status }}
      run: |
        if [ "$repo_status" != "successful" ]; then
            echo "No changes to commit."
        else
            current_date=$(date '+%Y-%m-%d')
            
            git add .
            git commit -a -m "Merge code repository on $current_date"
            
            echo "Changes committed. Proceeding with pull and push."
            git fetch origin master
            
            STATUS=$?
            if [ $STATUS -ne 0 ]; then
                echo "Fetch failed, please check your remote and network."; exit 1
            else
                git merge FETCH_HEAD
            fi
            
            # 检测是否存在冲突
            if git ls-files -u | grep -q '^'; then
                echo "Merge conflicts detected. Please resolve them manually."
                exit 1
            fi
            
            git push git@github.com:lysgwl/openwrt-package.git HEAD:master 
        fi

    #- name: Push changes repository
    #  uses: ad-m/github-push-action@master
    #  with:
    #    github_token: ${{ secrets.GITHUB_TOKEN }}   # PERSONAL_ACCESS_TOKEN
    #    branch: ${{ github.ref }}    # master
