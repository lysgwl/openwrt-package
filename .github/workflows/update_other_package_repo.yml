name: Update Other Package Repo

#on:
#  schedule:
#    - cron: '0 0 * * 0'
    # 每5分钟运行一次 (cron: '*/5 * * * *')
    # 每天凌晨运行 (0 0 * * *) 
    # 每周执行一次 (0 0 * * 0)
    # 每15天执行 (0 0 */15 * *)

on:
  repository_dispatch:
  workflow_dispatch:
  
env:
  BUILD_SCRIPT: run-scripts.sh
  REPO_OTHER_COND: 1
  REPO_LEDE_COND:  1
  REPO_SDHL_COND:  1
  
jobs:
  build:   # update build repo-sync
    runs-on: ubuntu-latest
    
    steps:

    - name: Checkout master branch
      uses: actions/checkout@v4
      with:
        ref: master
        
    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        scripts_file="${GITHUB_WORKSPACE}/.github/scripts/${BUILD_SCRIPT}"
        if [ ! -e "${scripts_file}" ]; then
            echo "the script does not exist, please check!"
            exit 1
        fi

        chmod +x "${scripts_file}"
        echo "scripts=${scripts_file}" >> $GITHUB_ENV
        
        df -hT

    - name: Set SSH key and known_hosts
      uses: webfactory/ssh-agent@v0.9.0   # appleboy/ssh-action@master
      with:
        ssh-private-key: ${{ secrets.PERSONAL_SSH_KEY }}
        
    - name: Setup git config
      run: |
        git config --global user.name "lysgwl"
        git config --global user.email "lysgwl@163.com"
        git config --global init.defaultBranch main

    - name: Get other repository contents
      if: env.REPO_OTHER_COND != 0 && !cancelled()
      run: |
        package_path_rel="otherpackage"
        mkdir -p "$package_path_rel"
        
        scripts_file=${{ env.scripts }}
        if [ ! -x "${scripts_file}" ]; then
            echo "the script cannot be executed, please check!"
            exit 1
        fi
        
        source ${scripts_file}
        clone_remote_repo ${REPO_OTHER_COND} ${package_path_rel}
        
        check_git_commit ${package_path_rel}
        
    - name: Get coolsnowwolf repository contents
      if: env.REPO_LEDE_COND != 0 && !cancelled()
      run: |
        package_path_rel="$PWD/coolsnowwolf/luci"
        mkdir -p "$package_path_rel"
        
        scripts_file=${{ env.scripts }}
        if [ ! -x "${scripts_file}" ]; then
            echo "the script cannot be executed, please check!"
            exit 1
        fi
        
        source ${scripts_file} 
        get_remote_repo ${REPO_LEDE_COND} ${package_path_rel}
        
        check_git_commit ${package_path_rel}
        
    - name: Get shidahuilang repository contents
      if: env.REPO_SDHL_COND != 0 && !cancelled()
      run: |
        package_path_rel="$PWD/shidahuilang"
        mkdir -p "$package_path_rel"
        
        scripts_file=${{ env.scripts }}
        if [ ! -x "${scripts_file}" ]; then
            echo "the script cannot be executed, please check!"
            exit 1
        fi
        
        source ${scripts_file}
        get_remote_repo 3 ${package_path_rel}
        
        check_git_commit ${package_path_rel} "Official"
        
    #- name: Commit and push repository using SSH
    #  run: |
    #    package_path_rel="$PWD"
    #    
    #    scripts_file=${{ env.scripts }}
    #    if [ ! -x "${scripts_file}" ]; then
    #        echo "the script cannot be executed, please check!"
    #        exit 1
    #    fi
    #
    #    source ${scripts_file}
    #    check_git_commit ${package_path_rel}    

    #- name: Push changes repository
    #  uses: ad-m/github-push-action@master
    #  with:
    #    github_token: ${{ secrets.GITHUB_TOKEN }}   # PERSONAL_ACCESS_TOKEN
    #    branch: ${{ github.ref }}    # master    
        
    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@v2  # main
      with:
        token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        repository: ${{ github.repository }}
        retain_days: 0          # 全部删除只留正在跑的一条
        keep_minimum_runs: 0    # 全部删除只留正在跑的一条    
